{"version":3,"sources":["components/Note.js","components/AddNote.js","components/NotesList.js","components/Search.js","components/Header.js","App.js","index.js"],"names":["Note","_ref","id","text","date","handleDeleteNote","React","createElement","className","MdDeleteForever","onClick","size","AddNote","handleAddNote","noteText","setNoteText","useState","rows","cols","placeholder","value","onChange","event","target","length","handleSaveClick","trim","NotesList","notes","map","note","Search","handleSearchNote","MdSearch","type","Header","handleToggleDarkMode","previousDarkMode","App","setNotes","nanoid","searchText","setSearchText","darkMode","setDarkMode","useEffect","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","concat","filter","toLowerCase","includes","Date","newNote","toLocaleDateString","newNotes","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.d7322791.chunk.js","sourcesContent":["import React from 'react';\nimport {MdDeleteForever} from 'react-icons/md';\n\nconst Note = ({id,text,date,handleDeleteNote}) => {\n    return(\n        <div className=\"note\">\n            {/* Text of the note */}\n            <span>{text}</span>\n            <div className=\"note-footer\">\n                <small>{date}</small>\n                <MdDeleteForever onClick={() => handleDeleteNote(id)} className='delete-icon' size='1.3em'/>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Note;","import React, { useState } from \"react\";\n\nconst AddNote = ({handleAddNote}) => {\n    const [noteText,setNoteText] = useState('');\n    const characterLimit = 200;\n    const handleChange = (event) => {\n        \n        if(characterLimit - event.target.value.length >= 0){\n            setNoteText(event.target.value);\n        }\n    }\n    \n    const handleSaveClick = () => {\n        if(noteText.trim().length>0){\n            handleAddNote(noteText);\n            setNoteText('');\n        }\n    }\n\n    return(\n        <div className=\"note new\">\n            <textarea\n\t\t\t\trows='8'\n\t\t\t\tcols='10'\n\t\t\t\tplaceholder='Type to add a note...'\n\t\t\t\tvalue={noteText}\n\t\t\t\tonChange={handleChange}\n\t\t\t></textarea>\n            <div className=\"note-footer\">\n                <small>{characterLimit-noteText.length} words remaining</small>\n                <button className=\"save\" onClick={handleSaveClick}>Save</button>\n            </div>\n        </div>\n    )\n}\n\nexport default AddNote;","import React from 'react';\nimport Note from './Note';\nimport AddNote from './AddNote';\nconst NotesList = ({ notes, handleAddNote, handleDeleteNote }) => {\n    return (\n        <div className='note-list'>\n            {notes.map((note) => (\n                <Note id={note.id} text={note.text} date={note.date} handleDeleteNote={handleDeleteNote}/>\n            ))}\n            <AddNote handleAddNote={handleAddNote}/>\n        </div>\n    );\n}\n\nexport default NotesList;","import React from 'react';\nimport { MdSearch } from 'react-icons/md';\n\nconst Search = ({handleSearchNote}) => {\n    return(<div className='search'>\n        <MdSearch className='search-icon' size='1.3em'/>\n        <input onChange={(event)=>handleSearchNote(event.target.value)} type='text' placeholder='type to search...'/>\n    </div>\n    )\n}\n\nexport default Search;","import React from 'react'\n\nconst Header = ({ handleToggleDarkMode }) => {\n    return (\n        <div className='header'>\n            <h1>My Notes</h1>\n            <button onClick={() => handleToggleDarkMode((previousDarkMode) => !previousDarkMode)} className='save'>Toggle Dark Mode</button>\n        </div>\n    )\n}\n\nexport default Header;","import React, { useEffect, useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport NotesList from './components/NotesList';\nimport Search from './components/Search';\nimport Header from './components/Header';\nconst App = () => {\n  const [notes, setNotes] = useState([\n    {\n      id: nanoid(),\n      text: \"This is my first note\",\n      date: \"28/02/2024\",\n    },\n    {\n      id: nanoid(),\n      text: \"This is my second note\",\n      date: \"28/02/2024\",\n    },\n  ]);\n\n  const [searchText, setSearchText] = useState('');\n\n  const [darkMode, setDarkMode] = useState(false);\n\n  useEffect(() => {\n\t\tconst savedNotes = JSON.parse(\n\t\t\tlocalStorage.getItem('react-notes-app-data')\n\t\t);\n\n\t\tif (savedNotes) {\n\t\t\tsetNotes(savedNotes);\n\t\t}\n\t}, []);\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem(\n\t\t\t'react-notes-app-data',\n\t\t\tJSON.stringify(notes)\n\t\t);\n\t}, [notes]);\n\n  const addNote = (text) => {\n    const date = new Date();\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString(),\n    }\n    const newNotes = [...notes, newNote]\n    setNotes(newNotes)\n  }\n\n  const deleteNote = (id) => {\n    const newNotes = notes.filter((note) => note.id !== id);\n    setNotes(newNotes);\n  }\n  return (\n    <div className={`${darkMode && 'dark-mode'}`}>\n      <div className=\"container\">\n        <Header handleToggleDarkMode={setDarkMode} />\n        <Search handleSearchNote={setSearchText} />\n        <NotesList notes={notes.filter((note) => note.text.toLowerCase().includes(searchText))} handleAddNote={addNote} handleDeleteNote={deleteNote} />\n      </div>\n    </div>\n\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}